<!DOCTYPE PATCH  SYSTEM "http://vvvv.org/versions/vvvv45beta34.2.dtd" >
   <PATCH nodename="D:\workspace\vvvv\vvvv_45beta34.2_x64\packs\dx11.particles\nodes\modules\Groups\Group (DX11.Particles.Groups).v4p" systemname="Group (DX11.Particles)" filename="D:\workspace\vvvv\vvvv_45beta34.2_x64\packs\dx11.particles\nodes\modules\Groups\Group (DX11.Particles).v4p" scrollx="15" scrolly="0">
   <BOUNDS type="Window" left="3600" top="930" width="19875" height="14955">
   </BOUNDS>
   <NODE systemname="Semantics (DX11.Layer)" filename="%VVVV%\packs\dx11\nodes\plugins\VVVV.DX11.Nodes.dll" nodename="Semantics (DX11.Layer)" componentmode="Hidden" id="34">
   <BOUNDS type="Node" left="6915" top="12765" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Layer In" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Custom Semantics" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Layer Out" visible="1">
   </PIN>
   <BOUNDS type="Box" left="6915" top="12765">
   </BOUNDS>
   </NODE>
   <NODE id="32" systemname="IOBox (Node)" componentmode="InABox" nodename="IOBox (Node)">
   <PIN pinname="Descriptive Name" slicecount="1" values="|Layer Out|">
   </PIN>
   <BOUNDS type="Box" left="6585" top="13725" width="750" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="6585" top="13725" width="750" height="240">
   </BOUNDS>
   <PIN pinname="Input Node" visible="1" slicecount="1" values="||">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (String)" componentmode="InABox" id="31" systemname="IOBox (String)">
   <BOUNDS type="Box" left="9405" top="11040" width="975" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="9405" top="11040" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Input String" slicecount="1" visible="1" values="..\..\fxh\">
   </PIN>
   <PIN pinname="Default" slicecount="1" values="||">
   </PIN>
   <PIN pinname="File Mask" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Maximum Characters" slicecount="1" values="-1">
   </PIN>
   <PIN pinname="String Type" slicecount="1" values="Filename">
   </PIN>
   <PIN pinname="Output String" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="Dispatcher (DX11.Drawer)" filename="%VVVV%\packs\dx11\nodes\plugins\VVVV.DX11.Nodes.dll" nodename="Dispatcher (DX11.Drawer)" componentmode="Hidden" id="30">
   <BOUNDS type="Node" left="8175" top="10605" width="1080" height="270">
   </BOUNDS>
   <PIN pinname="Thread X" visible="1" slicecount="1" values="55000">
   </PIN>
   <PIN pinname="Thread Z" visible="1" slicecount="1" values="64">
   </PIN>
   <PIN pinname="Thread Y" visible="1">
   </PIN>
   <BOUNDS type="Box" left="8175" top="10605">
   </BOUNDS>
   <PIN pinname="Geometry Out" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="IOBox (Value Advanced)" nodename="IOBox (Value Advanced)" componentmode="InABox" id="29">
   <BOUNDS type="Node" left="9690" top="9480" width="100" height="100">
   </BOUNDS>
   <BOUNDS type="Box" left="9690" top="9480" width="375" height="240">
   </BOUNDS>
   <PIN pinname="Value Type" slicecount="1" values="Integer">
   </PIN>
   <PIN pinname="Y Input Value" slicecount="1" values="64">
   </PIN>
   <PIN pinname="Y Output Value" visible="1">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|Group Size|">
   </PIN>
   <PIN pinname="Pin Visibility" slicecount="1" values="OnlyInspector">
   </PIN>
   </NODE>
   <NODE systemname="GetThreadSize (Value)" filename="%VVVV%\packs\dx11.particles\nodes\plugins\DX11.Extensions\x64\DX11.Extensions.dll" nodename="GetThreadSize (Value)" componentmode="Hidden" id="28">
   <BOUNDS type="Node" left="8175" top="10020" width="1560" height="270">
   </BOUNDS>
   <PIN pinname="Element Count" visible="1" slicecount="1" values="1100">
   </PIN>
   <PIN pinname="Group Size" visible="1" slicecount="2" values="64,1">
   </PIN>
   <PIN pinname="ThreadX" visible="1">
   </PIN>
   <PIN pinname="ThreadY" visible="1">
   </PIN>
   <PIN pinname="ThreadZ" visible="1">
   </PIN>
   <BOUNDS type="Box" left="8175" top="10020">
   </BOUNDS>
   <PIN pinname="String" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="29" srcpinname="Y Output Value" dstnodeid="28" dstpinname="Group Size">
   </LINK>
   <LINK srcnodeid="28" srcpinname="ThreadX" dstnodeid="30" dstpinname="Thread X">
   </LINK>
   <LINK srcnodeid="28" srcpinname="ThreadZ" dstnodeid="30" dstpinname="Thread Z">
   </LINK>
   <LINK srcnodeid="28" srcpinname="ThreadY" dstnodeid="30" dstpinname="Thread Y">
   </LINK>
   <NODE systemname="Cons (String)" filename="%VVVV%\lib\nodes\plugins\VVVV.Nodes.dll" nodename="Cons (String)" componentmode="Hidden" id="27">
   <BOUNDS type="Node" left="11880" top="11040" width="495" height="270">
   </BOUNDS>
   <PIN pinname="Input 1" visible="1" slicecount="3" values="|COMPOSITESTRUCT=float3 velocity; float lifespan; float3 position; float age; float3 force;|,COMPOSITESTRUCTAVAILABLE,MAXPARTICLECOUNT=14">
   </PIN>
   <PIN pinname="Input 2" visible="1" slicecount="2" values="|COMPOSITESTRUCT=float3 position; float lifespan; float3 velocity; float age; float3 force;|,COMPOSITESTRUCTAVAILABLE=1">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   <BOUNDS type="Box" left="11880" top="11040">
   </BOUNDS>
   <PIN pinname="Input Count" slicecount="1" values="2">
   </PIN>
   <PIN pinname="Input 3" visible="1" slicecount="1" values="||">
   </PIN>
   </NODE>
   <LINK srcnodeid="28" srcpinname="String" dstnodeid="27" dstpinname="Input 1" linkstyle="VHV">
   <LINKPOINT x="9735" y="10650">
   </LINKPOINT>
   <LINKPOINT x="11880" y="10650">
   </LINKPOINT>
   </LINK>
   <NODE nodename="IOBox (Enumerations)" componentmode="InABox" id="26" systemname="IOBox (Enumerations)">
   <BOUNDS type="Box" left="16770" top="585" width="1590" height="270">
   </BOUNDS>
   <BOUNDS type="Node" left="16770" top="585" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Input Enum" slicecount="1" visible="1" values="|Default System|">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="ParticleSystem">
   </PIN>
   <PIN pinname="Output Enum" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="Shader (DX11.Effect String)" filename="%VVVV%\packs\dx11.particles\nodes\plugins\DX11.Extensions\x64\DX11.Extensions.dll" nodename="Shader (DX11.Effect String)" componentmode="Hidden" id="15">
   <BOUNDS type="Node" left="6915" top="11580" width="5025" height="270">
   </BOUNDS>
   <BOUNDS type="Box" left="6915" top="11580">
   </BOUNDS>
   <PIN pinname="ShaderCode" visible="1" slicecount="1" values="|#include &quot;../fxh/Defines.fxh&quot;&cr;&lf;&cr;&lf;struct Particle {&cr;&lf;&tab;#if defined(COMPOSITESTRUCT)&cr;&lf;  &tab;&tab;COMPOSITESTRUCT&cr;&lf; &tab;#else&cr;&lf;&tab;&tab;int oneVariableNeeded;&cr;&lf;  &tab;&tab;float3 position;&cr;&lf;&tab;#endif&cr;&lf;};&cr;&lf;&cr;&lf;RWStructuredBuffer&lt;Particle&gt; ParticleBuffer : PARTICLEBUFFER;&cr;&lf;&cr;&lf;RWStructuredBuffer&lt;uint&gt; AliveIndexBuffer : ALIVEINDEXBUFFER;&cr;&lf;RWStructuredBuffer&lt;uint&gt; AliveCounterBuffer : ALIVECOUNTERBUFFER;&cr;&lf;&cr;&lf;RWStructuredBuffer&lt;uint&gt; SelectionCounterBuffer : SELECTIONCOUNTERBUFFER;&cr;&lf;RWStructuredBuffer&lt;uint&gt; SelectionIndexBuffer : SELECTIONINDEXBUFFER;&cr;&lf;&cr;&lf;RWStructuredBuffer&lt;bool&gt; FlagBuffer : FLAGBUFFER;&cr;&lf;&cr;&lf;RWStructuredBuffer&lt;GroupLink&gt; GroupLinkBuffer : GROUPLINKBUFFER_group1;&cr;&lf;RWStructuredBuffer&lt;uint&gt; GroupCounterBuffer : GROUPCOUNTERBUFFER_group1;&cr;&lf;&cr;&lf;cbuffer name : register(b0){&cr;&lf;   float4x4 tFilter681 : TFILTER681;&cr;&lf;float4x4 tFilter682 : TFILTER682;&cr;&lf;float4x4 tFilter683 : TFILTER683;&cr;&lf;float4x4 tFilter684 : TFILTER684;&cr;&lf;float4x4 tFilter685 : TFILTER685;&cr;&lf;float4x4 tFilter686 : TFILTER686;&cr;&lf;float4x4 tFilter687 : TFILTER687;&cr;&lf;float4x4 tFilter688 : TFILTER688;&cr;&lf;float4x4 tFilter689 : TFILTER689;&cr;&lf;float4x4 tFilter690 : TFILTER690;&cr;&lf;float4x4 tFilter691 : TFILTER691;&cr;&lf;float4x4 tFilter692 : TFILTER692;&cr;&lf;float4x4 tFilter693 : TFILTER693;&cr;&lf;float4x4 tFilter694 : TFILTER694;&cr;&lf;float4x4 tFilter695 : TFILTER695;&cr;&lf;float4x4 tFilter696 : TFILTER696;&cr;&lf;float4x4 tFilter697 : TFILTER697;&cr;&lf;float4x4 tFilter698 : TFILTER698;&cr;&lf;float4x4 tFilter699 : TFILTER699;&cr;&lf;float4x4 tFilter700 : TFILTER700;&cr;&lf;float4x4 tFilter701 : TFILTER701;&cr;&lf;float4x4 tFilter702 : TFILTER702;&cr;&lf;float4x4 tFilter703 : TFILTER703;&cr;&lf;float4x4 tFilter704 : TFILTER704;&cr;&lf;float4x4 tFilter705 : TFILTER705;&cr;&lf;float4x4 tFilter706 : TFILTER706;&cr;&lf;float4x4 tFilter707 : TFILTER707;&cr;&lf;float4x4 tFilter708 : TFILTER708;&cr;&lf;float4x4 tFilter709 : TFILTER709;&cr;&lf;float4x4 tFilter710 : TFILTER710;&cr;&lf;float4x4 tFilter711 : TFILTER711;&cr;&lf;float4x4 tFilter712 : TFILTER712;&cr;&lf;float4x4 tFilter713 : TFILTER713;&cr;&lf;float4x4 tFilter714 : TFILTER714;&cr;&lf;float4x4 tFilter715 : TFILTER715;&cr;&lf;float4x4 tFilter716 : TFILTER716;&cr;&lf;float4x4 tFilter717 : TFILTER717;&cr;&lf;float4x4 tFilter718 : TFILTER718;&cr;&lf;float4x4 tFilter719 : TFILTER719;&cr;&lf;float4x4 tFilter720 : TFILTER720;&cr;&lf;float4x4 tFilter721 : TFILTER721;&cr;&lf;float4x4 tFilter722 : TFILTER722;&cr;&lf;float4x4 tFilter723 : TFILTER723;&cr;&lf;float4x4 tFilter724 : TFILTER724;&cr;&lf;float4x4 tFilter725 : TFILTER725;&cr;&lf;float4x4 tFilter726 : TFILTER726;&cr;&lf;float4x4 tFilter727 : TFILTER727;&cr;&lf;float4x4 tFilter728 : TFILTER728;&cr;&lf;float4x4 tFilter729 : TFILTER729;&cr;&lf;float4x4 tFilter730 : TFILTER730;&cr;&lf;};&cr;&lf;&cr;&lf;#include &quot;../fxh/Functions.fxh&quot;&cr;&lf;&cr;&lf;void LocalityInsideTransform( uint slotIndex,uint groupIndex, float4x4 tFilter)&cr;&lf;{&cr;&lf;&tab;float3 pointCoord = mul(float4(ParticleBuffer[slotIndex].position,1), tFilter).xyz;&cr;&lf;&tab;if( !(&tab;pointCoord.x &lt; -0.5 |||| pointCoord.x &gt; 0.5 ||||&cr;&lf;&tab;&tab;pointCoord.y &lt; -0.5 |||| pointCoord.y &gt; 0.5 ||||&cr;&lf;&tab;&tab;pointCoord.z &lt; -0.5 |||| pointCoord.z &gt; 0.5))&cr;&lf;&tab;{&cr;&lf;&tab;&tab;uint groupLinkIndex = GroupLinkBuffer.IncrementCounter();&cr;&lf;&tab;&tab;&cr;&lf;&tab;&tab;GroupLink link;&cr;&lf;&tab;&tab;link.groupId = groupIndex;&cr;&lf;&tab;&tab;link.particleId = slotIndex;&cr;&lf;&tab;&tab;&cr;&lf;&tab;&tab;GroupLinkBuffer[groupLinkIndex] = link;&cr;&lf;&tab;&tab;&cr;&lf;&tab;&tab;uint oldval;&cr;&lf;&tab;&tab;InterlockedAdd(GroupCounterBuffer[groupIndex],1,oldval);&cr;&lf;&tab;}&cr;&lf;&cr;&lf;}&cr;&lf;void LocalityOutsideTransform( uint slotIndex, uint groupIndex, float4x4 tFilter)&cr;&lf;{&cr;&lf;&tab;float3 pointCoord = mul(float4(ParticleBuffer[slotIndex].position,1), tFilter).xyz;&cr;&lf;&tab;if( (&tab;pointCoord.x &lt; -0.5 |||| pointCoord.x &gt; 0.5 ||||&cr;&lf;&tab;&tab;pointCoord.y &lt; -0.5 |||| pointCoord.y &gt; 0.5 ||||&cr;&lf;&tab;&tab;pointCoord.z &lt; -0.5 |||| pointCoord.z &gt; 0.5))&cr;&lf;&tab;{&cr;&lf;&tab;&tab;uint groupLinkIndex = GroupLinkBuffer.IncrementCounter();&cr;&lf;&tab;&tab;&cr;&lf;&tab;&tab;GroupLink link;&cr;&lf;&tab;&tab;link.groupId = groupIndex;&cr;&lf;&tab;&tab;link.particleId = slotIndex;&cr;&lf;&tab;&tab;&cr;&lf;&tab;&tab;GroupLinkBuffer[groupLinkIndex] = link;&cr;&lf;&tab;&tab;&cr;&lf;&tab;&tab;uint oldval;&cr;&lf;&tab;&tab;InterlockedAdd(GroupCounterBuffer[groupIndex],1,oldval);&cr;&lf;&tab;}&cr;&lf;&cr;&lf;}&cr;&lf;&cr;&lf;struct csin&cr;&lf;{&cr;&lf;&tab;uint3 DTID : SV_DispatchThreadID;&cr;&lf;&tab;uint3 GTID : SV_GroupThreadID;&cr;&lf;&tab;uint3 GID : SV_GroupID;&cr;&lf;};&cr;&lf;&cr;&lf;[numthreads(XTHREADS, YTHREADS, ZTHREADS)]&cr;&lf;void CS_ClearGroup(csin input)&cr;&lf;{&cr;&lf;&tab;if (input.DTID.x &gt; MAXGROUPELEMENTCOUNT) return;&cr;&lf;&tab;GroupLink link = { -1, -1 };&cr;&lf;&tab;GroupLinkBuffer[input.DTID.x] = link; // resets all links&cr;&lf;&tab;&cr;&lf;&tab;GroupCounterBuffer[input.DTID.x] = 0;&cr;&lf;}&cr;&lf;&cr;&lf;[numthreads(XTHREADS, YTHREADS, ZTHREADS)]&cr;&lf;void CS_SetGroup(csin input)&cr;&lf;{&cr;&lf;&tab;&cr;&lf;&tab;uint slotIndex = getSlotIndex( input.DTID.x );&cr;&lf;&tab;if (slotIndex == -1 ) return;&cr;&lf;&tab;&cr;&lf;&tab;uint groupIndex = 0;&cr;&lf;&tab;&cr;&lf;&tab;groupIndex= 0 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter681);&cr;&lf;groupIndex= 1 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter682);&cr;&lf;groupIndex= 2 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter683);&cr;&lf;groupIndex= 3 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter684);&cr;&lf;groupIndex= 4 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter685);&cr;&lf;groupIndex= 5 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter686);&cr;&lf;groupIndex= 6 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter687);&cr;&lf;groupIndex= 7 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter688);&cr;&lf;groupIndex= 8 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter689);&cr;&lf;groupIndex= 9 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter690);&cr;&lf;groupIndex= 10 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter691);&cr;&lf;groupIndex= 11 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter692);&cr;&lf;groupIndex= 12 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter693);&cr;&lf;groupIndex= 13 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter694);&cr;&lf;groupIndex= 14 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter695);&cr;&lf;groupIndex= 15 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter696);&cr;&lf;groupIndex= 16 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter697);&cr;&lf;groupIndex= 17 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter698);&cr;&lf;groupIndex= 18 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter699);&cr;&lf;groupIndex= 19 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter700);&cr;&lf;groupIndex= 20 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter701);&cr;&lf;groupIndex= 21 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter702);&cr;&lf;groupIndex= 22 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter703);&cr;&lf;groupIndex= 23 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter704);&cr;&lf;groupIndex= 24 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter705);&cr;&lf;groupIndex= 25 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter706);&cr;&lf;groupIndex= 26 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter707);&cr;&lf;groupIndex= 27 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter708);&cr;&lf;groupIndex= 28 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter709);&cr;&lf;groupIndex= 29 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter710);&cr;&lf;groupIndex= 30 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter711);&cr;&lf;groupIndex= 31 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter712);&cr;&lf;groupIndex= 32 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter713);&cr;&lf;groupIndex= 33 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter714);&cr;&lf;groupIndex= 34 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter715);&cr;&lf;groupIndex= 35 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter716);&cr;&lf;groupIndex= 36 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter717);&cr;&lf;groupIndex= 37 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter718);&cr;&lf;groupIndex= 38 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter719);&cr;&lf;groupIndex= 39 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter720);&cr;&lf;groupIndex= 40 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter721);&cr;&lf;groupIndex= 41 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter722);&cr;&lf;groupIndex= 42 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter723);&cr;&lf;groupIndex= 43 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter724);&cr;&lf;groupIndex= 44 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter725);&cr;&lf;groupIndex= 45 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter726);&cr;&lf;groupIndex= 46 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter727);&cr;&lf;groupIndex= 47 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter728);&cr;&lf;groupIndex= 48 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter729);&cr;&lf;groupIndex= 49 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter730);&cr;&lf;&tab;&cr;&lf;}&cr;&lf;&cr;&lf;technique11 ClearGroup { pass P0{SetComputeShader( CompileShader( cs_5_0, CS_ClearGroup() ) );} }&cr;&lf;technique11 SetGroup { pass P0{SetComputeShader( CompileShader( cs_5_0, CS_SetGroup() ) );} }|">
   </PIN>
   <PIN pinname="Technique" visible="1">
   </PIN>
   <PIN pinname="Layer" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="31" srcpinname="Output String" dstnodeid="15" dstpinname="IncludePath">
   </LINK>
   <LINK srcnodeid="27" srcpinname="Output" dstnodeid="15" dstpinname="Defines" linkstyle="VHV">
   <LINKPOINT x="12485" y="11413">
   </LINKPOINT>
   <LINKPOINT x="11335" y="11403">
   </LINKPOINT>
   </LINK>
   <LINK srcnodeid="30" srcpinname="Geometry Out" dstnodeid="15" dstpinname="Geometry">
   </LINK>
   <LINK srcnodeid="15" srcpinname="Layer" dstnodeid="34" dstpinname="Layer In">
   </LINK>
   <NODE systemname="Reader (String)" filename="%VVVV%\lib\nodes\modules\String\Reader (String).v4p" nodename="Reader (String)" componentmode="Hidden" id="10">
   <BOUNDS type="Node" left="5820" top="6375" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Filename" visible="1" slicecount="1" values="lib\nodes\modules\String\file.txt">
   </PIN>
   <PIN pinname="Content" visible="1">
   </PIN>
   <PIN pinname="Read" slicecount="1" visible="1" values="0">
   </PIN>
   </NODE>
   <NODE systemname="Change (file)" filename="%VVVV%\packs\dx11.particles\nodes\plugins\VVVV.Extensions\x64\VVVV.Extensions.dll" nodename="Change (file)" componentmode="Hidden" id="9">
   <BOUNDS type="Node" left="6540" top="5955" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Input" visible="1">
   </PIN>
   <PIN pinname="Changed" visible="1">
   </PIN>
   <PIN pinname="Renamed" visible="1">
   </PIN>
   <PIN pinname="Filename" visible="1" slicecount="1" values="packs\dx11.particles\nodes\dx11\Selection_Skeleton.fx">
   </PIN>
   </NODE>
   <LINK srcnodeid="9" srcpinname="Changed" dstnodeid="10" dstpinname="Read">
   </LINK>
   <NODE systemname="Substitute (String bin)" filename="%VVVV%\packs\dx11.particles\nodes\plugins\VVVV.Extensions\x64\VVVV.Extensions.dll" nodename="Substitute (String bin)" componentmode="Hidden" id="8">
   <BOUNDS type="Node" left="5805" top="7785" width="5910" height="270">
   </BOUNDS>
   <PIN pinname="Input" visible="1" slicecount="1" values="|#include &quot;../fxh/Defines.fxh&quot;&cr;&lf;&cr;&lf;struct Particle {&cr;&lf;&tab;#if defined(COMPOSITESTRUCT)&cr;&lf;  &tab;&tab;COMPOSITESTRUCT&cr;&lf; &tab;#else&cr;&lf;&tab;&tab;int oneVariableNeeded;&cr;&lf;  &tab;&tab;/*STUB_VARS_STRUCT*/&cr;&lf;&tab;#endif&cr;&lf;};&cr;&lf;&cr;&lf;RWStructuredBuffer&lt;Particle&gt; ParticleBuffer : PARTICLEBUFFER;&cr;&lf;&cr;&lf;RWStructuredBuffer&lt;uint&gt; AliveIndexBuffer : ALIVEINDEXBUFFER;&cr;&lf;RWStructuredBuffer&lt;uint&gt; AliveCounterBuffer : ALIVECOUNTERBUFFER;&cr;&lf;&cr;&lf;RWStructuredBuffer&lt;uint&gt; SelectionCounterBuffer : SELECTIONCOUNTERBUFFER;&cr;&lf;RWStructuredBuffer&lt;uint&gt; SelectionIndexBuffer : SELECTIONINDEXBUFFER;&cr;&lf;&cr;&lf;RWStructuredBuffer&lt;bool&gt; FlagBuffer : FLAGBUFFER;&cr;&lf;&cr;&lf;RWStructuredBuffer&lt;GroupLink&gt; GroupLinkBuffer : GROUPLINKBUFFER_/*STUB_GROUPNAME*/;&cr;&lf;RWStructuredBuffer&lt;uint&gt; GroupCounterBuffer : GROUPCOUNTERBUFFER_/*STUB_GROUPNAME*/;&cr;&lf;&cr;&lf;cbuffer name : register(b0){&cr;&lf;   /*STUB_VARS_CBUF*/&cr;&lf;};&cr;&lf;&cr;&lf;#include &quot;../fxh/Functions.fxh&quot;&cr;&lf;&cr;&lf;/*STUB_FUNCTION_DEF*/&cr;&lf;&cr;&lf;struct csin&cr;&lf;{&cr;&lf;&tab;uint3 DTID : SV_DispatchThreadID;&cr;&lf;&tab;uint3 GTID : SV_GroupThreadID;&cr;&lf;&tab;uint3 GID : SV_GroupID;&cr;&lf;};&cr;&lf;&cr;&lf;[numthreads(XTHREADS, YTHREADS, ZTHREADS)]&cr;&lf;void CS_ClearGroup(csin input)&cr;&lf;{&cr;&lf;&tab;if (input.DTID.x &gt; MAXGROUPELEMENTCOUNT) return;&cr;&lf;&tab;GroupLink link = { -1, -1 };&cr;&lf;&tab;GroupLinkBuffer[input.DTID.x] = link; // resets all links&cr;&lf;&tab;&cr;&lf;&tab;GroupCounterBuffer[input.DTID.x] = 0;&cr;&lf;}&cr;&lf;&cr;&lf;[numthreads(XTHREADS, YTHREADS, ZTHREADS)]&cr;&lf;void CS_SetGroup(csin input)&cr;&lf;{&cr;&lf;&tab;&cr;&lf;&tab;uint slotIndex = getSlotIndex( input.DTID.x );&cr;&lf;&tab;if (slotIndex == -1 ) return;&cr;&lf;&tab;&cr;&lf;&tab;uint groupIndex = 0;&cr;&lf;&tab;&cr;&lf;&tab;/*STUB_FUNCTION_CALL*/&cr;&lf;&tab;&cr;&lf;}&cr;&lf;&cr;&lf;technique11 ClearGroup { pass P0{SetComputeShader( CompileShader( cs_5_0, CS_ClearGroup() ) );} }&cr;&lf;technique11 SetGroup { pass P0{SetComputeShader( CompileShader( cs_5_0, CS_SetGroup() ) );} }|">
   </PIN>
   <PIN pinname="From" visible="1">
   </PIN>
   <PIN pinname="To" visible="1">
   </PIN>
   <PIN pinname="To Bin Size" visible="1" slicecount="1" values="1">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   <BOUNDS type="Box" left="5805" top="7785">
   </BOUNDS>
   </NODE>
   <NODE nodename="IOBox (String)" componentmode="InABox" id="6" systemname="IOBox (String)">
   <BOUNDS type="Box" left="6975" top="6600" width="2370" height="915">
   </BOUNDS>
   <BOUNDS type="Node" left="6975" top="6600" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Input String" slicecount="5" visible="1" values="/*STUB_VARS_STRUCT*/,/*STUB_VARS_CBUF*/,/*STUB_GROUPNAME*/,/*STUB_FUNCTION_DEF*/,/*STUB_FUNCTION_CALL*/">
   </PIN>
   <PIN pinname="Default" slicecount="1" values="||">
   </PIN>
   <PIN pinname="File Mask" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Maximum Characters" slicecount="1" values="-1">
   </PIN>
   <PIN pinname="Rows" slicecount="1" values="5">
   </PIN>
   <PIN pinname="Show Grid" slicecount="1" values="1">
   </PIN>
   <PIN pinname="SliceCount Mode" slicecount="1" values="ColsRowsPages">
   </PIN>
   </NODE>
   <LINK srcnodeid="6" srcpinname="Output String" dstnodeid="8" dstpinname="From" linkstyle="VHV">
   <LINKPOINT x="6510" y="7670">
   </LINKPOINT>
   <LINKPOINT x="7500" y="7675">
   </LINKPOINT>
   </LINK>
   <NODE nodename="IOBox (String)" componentmode="InABox" id="4" systemname="IOBox (String)">
   <BOUNDS type="Node" left="6420" top="5535" width="3855" height="270">
   </BOUNDS>
   <BOUNDS type="Box" left="6420" top="5535" width="3855" height="270">
   </BOUNDS>
   <PIN pinname="Input String" visible="0" slicecount="1" values="|&lt;&lt; this is the skeleton with hooks for grouping code|">
   </PIN>
   <PIN pinname="Output String" visible="0">
   </PIN>
   <PIN pinname="Show Grid" slicecount="1" values="0">
   </PIN>
   <PIN pinname="String Type" slicecount="1" values="MultiLine">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (String)" componentmode="InABox" id="3" systemname="IOBox (String)">
   <BOUNDS type="Node" left="12210" top="7785" width="4410" height="270">
   </BOUNDS>
   <BOUNDS type="Box" left="12210" top="7785" width="4410" height="270">
   </BOUNDS>
   <PIN pinname="Input String" visible="0" slicecount="1" values="|&lt;&lt; substitute stubs with code generated by grouping nodes|">
   </PIN>
   <PIN pinname="Output String" visible="0">
   </PIN>
   <PIN pinname="Show Grid" slicecount="1" values="0">
   </PIN>
   <PIN pinname="String Type" slicecount="1" values="MultiLine">
   </PIN>
   </NODE>
   <NODE systemname="Register (DX11.Particles.Core Shader)" filename="%VVVV%\packs\dx11.particles\nodes\plugins\DX11.Particles.Core\x64\DX11.Particles.Core.dll" nodename="Register (DX11.Particles.Core Shader)" componentmode="Hidden" id="2">
   <BOUNDS type="Node" left="10155" top="1725" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Structure" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Defines" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="ParticleSystem" slicecount="1" visible="1" values="|ParticleSystem 01|">
   </PIN>
   <PIN pinname="Element Count" visible="1">
   </PIN>
   <PIN pinname="BufferSemantics" visible="1">
   </PIN>
   <BOUNDS type="Box" left="10155" top="1725">
   </BOUNDS>
   </NODE>
   <LINK srcnodeid="26" srcpinname="Output Enum" dstnodeid="2" dstpinname="ParticleSystem" linkstyle="Bezier" hiddenwhenlocked="1">
   <LINKPOINT x="16770" y="1275">
   </LINKPOINT>
   <LINKPOINT x="10830" y="1275">
   </LINKPOINT>
   </LINK>
   <NODE systemname="Info (DX11.Particles.Core Shader)" filename="%VVVV%\packs\dx11.particles\nodes\plugins\DX11.Particles.Core\x64\DX11.Particles.Core.dll" nodename="Info (DX11.Particles.Core Shader)" componentmode="Hidden" id="1">
   <BOUNDS type="Node" left="11340" top="1725" width="100" height="100">
   </BOUNDS>
   <PIN pinname="ParticleSystem" visible="1">
   </PIN>
   <PIN pinname="ParticleSystem Defines" visible="1">
   </PIN>
   <PIN pinname="ParticleSystem ElementCount" visible="1">
   </PIN>
   <BOUNDS type="Box" left="11340" top="1725">
   </BOUNDS>
   </NODE>
   <LINK srcnodeid="26" srcpinname="Output Enum" dstnodeid="1" dstpinname="ParticleSystem" linkstyle="Bezier" hiddenwhenlocked="1">
   <LINKPOINT x="16770" y="1275">
   </LINKPOINT>
   <LINKPOINT x="11400" y="1275">
   </LINKPOINT>
   </LINK>
   <LINK srcnodeid="1" srcpinname="ParticleSystem Defines" dstnodeid="27" dstpinname="Input 2" linkstyle="Bezier" hiddenwhenlocked="1">
   <LINKPOINT x="11370" y="6768">
   </LINKPOINT>
   <LINKPOINT x="12330" y="6268">
   </LINKPOINT>
   </LINK>
   <LINK srcnodeid="1" srcpinname="ParticleSystem ElementCount" dstnodeid="28" dstpinname="Element Count" linkstyle="Bezier" hiddenwhenlocked="1">
   <LINKPOINT x="11535" y="6250">
   </LINKPOINT>
   <LINKPOINT x="8205" y="5750">
   </LINKPOINT>
   </LINK>
   <NODE nodename="IOBox (Enumerations)" componentmode="InABox" id="0" systemname="IOBox (Enumerations)">
   <BOUNDS type="Box" left="10620" top="11040" width="1035" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="10620" top="11040" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Input Enum" slicecount="1" visible="1" values="SetGroup">
   </PIN>
   </NODE>
   <LINK srcnodeid="0" srcpinname="Output Enum" dstnodeid="15" dstpinname="Technique">
   </LINK>
   <NODE systemname="Group_Skeleton (DX11.Effect)" filename="%VVVV%\packs\dx11.particles\nodes\dx11\Group_Skeleton.fx" nodename="Group_Skeleton (DX11.Effect)" componentmode="Hidden" id="11">
   <BOUNDS type="Node" left="4725" top="5535" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Shader Path" visible="1" pintype="Output">
   </PIN>
   <PIN pinname="Technique Valid" visible="1">
   </PIN>
   <PIN pinname="Compiled" visible="1">
   </PIN>
   <PIN pinname="Query" visible="1">
   </PIN>
   <BOUNDS type="Box" left="4725" top="5535">
   </BOUNDS>
   <PIN pinname="Technique" slicecount="1" values="ClearGroup">
   </PIN>
   </NODE>
   <LINK srcnodeid="11" srcpinname="Shader Path" dstnodeid="10" dstpinname="Filename">
   </LINK>
   <LINK srcnodeid="11" srcpinname="Shader Path" dstnodeid="9" dstpinname="Filename" linkstyle="VHV">
   <LINKPOINT x="5980" y="5865">
   </LINKPOINT>
   <LINKPOINT x="6590" y="5865">
   </LINKPOINT>
   </LINK>
   <PACK Name="vvvv-ZeroMQ" Version="0.5.0">
   </PACK>
   <PACK Name="addonpack" Version="34.1.0">
   </PACK>
   <NODE systemname="Register (DX11.Particles.Core Buffer)" filename="%VVVV%\packs\dx11.particles\nodes\plugins\DX11.Particles.Core\x64\DX11.Particles.Core.dll" nodename="Register (DX11.Particles.Core Buffer)" componentmode="Hidden" id="36">
   <BOUNDS type="Node" left="13275" top="5415" width="3555" height="270">
   </BOUNDS>
   <PIN pinname="BufferSemantic" visible="1" slicecount="2" values="GROUPINDEXBUFFER_Group1,GROUPCOUNTERBUFFER_Group1">
   </PIN>
   <PIN pinname="Element Count" visible="1" slicecount="1" values="0">
   </PIN>
   <PIN pinname="Stride" visible="1" slicecount="1" values="0">
   </PIN>
   <PIN pinname="Buffer Mode" visible="1" slicecount="1" values="0">
   </PIN>
   <PIN pinname="Reset Counter" visible="1" slicecount="1" values="0">
   </PIN>
   <BOUNDS type="Box" left="13275" top="5415">
   </BOUNDS>
   <PIN pinname="ParticleSystem" visible="1" slicecount="1" values="|Default System|">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (String)" componentmode="InABox" id="38" systemname="IOBox (String)">
   <BOUNDS type="Box" left="13290" top="3420" width="1860" height="420">
   </BOUNDS>
   <BOUNDS type="Node" left="13290" top="3420" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Input String" slicecount="2" visible="1" values="GROUPLINKBUFFER,GROUPCOUNTERBUFFER">
   </PIN>
   <PIN pinname="Default" slicecount="1" values="text">
   </PIN>
   <PIN pinname="File Mask" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Maximum Characters" slicecount="1" values="-1">
   </PIN>
   <PIN pinname="Rows" slicecount="1" values="2">
   </PIN>
   <PIN pinname="SliceCount Mode" slicecount="1" values="ColsRowsPages">
   </PIN>
   <PIN pinname="Show Grid" slicecount="1" values="1">
   </PIN>
   <PIN pinname="Output String" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="Add (String)" nodename="Add (String)" componentmode="Hidden" id="37">
   <BOUNDS type="Node" left="13290" top="4395" width="450" height="270">
   </BOUNDS>
   <PIN pinname="Input Count" slicecount="1" values="2">
   </PIN>
   <PIN pinname="Input 1" slicecount="4" visible="1" values="BUFFER,BUFFER,COUNTERBUFFER,COUNTERBUFFER">
   </PIN>
   <PIN pinname="Input 3" slicecount="1" values="BUFFER">
   </PIN>
   <PIN pinname="Input 2" visible="1" slicecount="2" values="Group1,Group2">
   </PIN>
   <PIN pinname="Intersperse" slicecount="1" values="UnderScore">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   <PIN pinname="Intersperse String" visible="-1" pintype="Input" slicecount="1" values="||">
   </PIN>
   </NODE>
   <LINK srcnodeid="38" srcpinname="Output String" dstnodeid="37" dstpinname="Input 1" linkstyle="VHV">
   <LINKPOINT x="12855" y="4035">
   </LINKPOINT>
   <LINKPOINT x="13785" y="4170">
   </LINKPOINT>
   </LINK>
   <NODE nodename="IOBox (String)" componentmode="InABox" id="39" systemname="IOBox (String)">
   <BOUNDS type="Box" left="13485" top="585" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="13485" top="585" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Input String" slicecount="1" visible="1" values="group1">
   </PIN>
   <PIN pinname="Default" slicecount="1" values="||">
   </PIN>
   <PIN pinname="File Mask" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Maximum Characters" slicecount="1" values="-1">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="GroupName">
   </PIN>
   <PIN pinname="Output String" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="39" srcpinname="Output String" dstnodeid="37" dstpinname="Input 2">
   </LINK>
   <LINK srcnodeid="37" srcpinname="Output" dstnodeid="36" dstpinname="BufferSemantic">
   </LINK>
   <NODE systemname="Zip (String Bin)" filename="%VVVV%\lib\nodes\plugins\VVVV.Nodes.dll" nodename="Zip (String Bin)" componentmode="Hidden" id="41">
   <BOUNDS type="Node" left="9690" top="7245" width="1995" height="270">
   </BOUNDS>
   <PIN pinname="Input Count" slicecount="1" values="5">
   </PIN>
   <PIN pinname="Output Bin Size" visible="1">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   <PIN pinname="Input 3" visible="1">
   </PIN>
   <PIN pinname="Input 2" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Input 4" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Input 1" visible="1" slicecount="3" values="|COMPOSITESTRUCT=float3 position; float lifespan; float3 velocity; float age; float3 acceleration; float4 color;|,MAXPARTICLECOUNT=4,KNOW_COLOR=1">
   </PIN>
   <PIN pinname="Input 5" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="41" srcpinname="Output Bin Size" dstnodeid="8" dstpinname="To Bin Size">
   </LINK>
   <LINK srcnodeid="41" srcpinname="Output" dstnodeid="8" dstpinname="To">
   </LINK>
   <LINK srcnodeid="39" srcpinname="Output String" dstnodeid="41" dstpinname="Input 3" linkstyle="Bezier" hiddenwhenlocked="1">
   <LINKPOINT x="13485" y="4028">
   </LINKPOINT>
   <LINKPOINT x="10575" y="4028">
   </LINKPOINT>
   </LINK>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="50" systemname="IOBox (Value Advanced)">
   <BOUNDS type="Box" left="13995" top="4515" width="465" height="495">
   </BOUNDS>
   <BOUNDS type="Node" left="13995" top="4515" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Y Input Value" slicecount="2" visible="1" values="8,2">
   </PIN>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Value Type" slicecount="1" values="Integer">
   </PIN>
   <PIN pinname="Rows" slicecount="1" values="2">
   </PIN>
   <PIN pinname="Vector Size" slicecount="1" values="2">
   </PIN>
   <PIN pinname="Default" slicecount="1" values="|0, 0|">
   </PIN>
   <PIN pinname="Show Slider" slicecount="1" values="0">
   </PIN>
   <PIN pinname="Show Grid" slicecount="1" values="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="50" srcpinname="Y Output Value" dstnodeid="36" dstpinname="Element Count">
   </LINK>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="51" systemname="IOBox (Value Advanced)">
   <BOUNDS type="Box" left="14655" top="4515" width="285" height="495">
   </BOUNDS>
   <BOUNDS type="Node" left="14655" top="4515" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Y Input Value" slicecount="2" visible="1" values="8,4">
   </PIN>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Value Type" slicecount="1" values="Integer">
   </PIN>
   <PIN pinname="Rows" slicecount="1" values="2">
   </PIN>
   <PIN pinname="Vector Size" slicecount="1" values="2">
   </PIN>
   <PIN pinname="Default" slicecount="1" values="|0, 0|">
   </PIN>
   <PIN pinname="Show Slider" slicecount="1" values="0">
   </PIN>
   <PIN pinname="Show Grid" slicecount="1" values="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="51" srcpinname="Y Output Value" dstnodeid="36" dstpinname="Stride">
   </LINK>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="52" systemname="IOBox (Value Advanced)">
   <BOUNDS type="Box" left="15360" top="4515" width="285" height="495">
   </BOUNDS>
   <BOUNDS type="Node" left="15360" top="4515" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Y Input Value" slicecount="2" visible="1" values="2,2">
   </PIN>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Value Type" slicecount="1" values="Integer">
   </PIN>
   <PIN pinname="Rows" slicecount="1" values="2">
   </PIN>
   <PIN pinname="Vector Size" slicecount="1" values="2">
   </PIN>
   <PIN pinname="Default" slicecount="1" values="|0, 0|">
   </PIN>
   <PIN pinname="Show Slider" slicecount="1" values="0">
   </PIN>
   <PIN pinname="Show Grid" slicecount="1" values="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="52" srcpinname="Y Output Value" dstnodeid="36" dstpinname="Buffer Mode">
   </LINK>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="53" systemname="IOBox (Value Advanced)">
   <BOUNDS type="Box" left="16050" top="4515" width="480" height="480">
   </BOUNDS>
   <BOUNDS type="Node" left="16050" top="4515" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Y Input Value" slicecount="1" visible="1" values="1">
   </PIN>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Value Type" slicecount="1" values="Boolean">
   </PIN>
   <PIN pinname="Behavior" slicecount="1" values="Toggle">
   </PIN>
   <PIN pinname="X Input Value" slicecount="1" values="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="53" srcpinname="Y Output Value" dstnodeid="36" dstpinname="Reset Counter">
   </LINK>
   <LINK srcnodeid="26" srcpinname="Output Enum" dstnodeid="36" dstpinname="ParticleSystem" linkstyle="VHV">
   <LINKPOINT x="16250" y="3135">
   </LINKPOINT>
   <LINKPOINT x="17350" y="3135">
   </LINKPOINT>
   </LINK>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="57" systemname="IOBox (Value Advanced)">
   <BOUNDS type="Box" left="4980" top="2985" width="525" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="4980" top="2985" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Value Type" slicecount="1" values="Integer">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|Max Group Elements|">
   </PIN>
   <PIN pinname="Y Output Value" visible="1">
   </PIN>
   <PIN pinname="Y Input Value" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="Add (String)" nodename="Add (String)" componentmode="Hidden" id="56">
   <BOUNDS type="Node" left="6270" top="10140" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Input 2" visible="1">
   </PIN>
   <PIN pinname="Intersperse" slicecount="1" visible="1" values="None">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   <PIN pinname="Intersperse String" slicecount="1" values="=">
   </PIN>
   <PIN pinname="Input 1" slicecount="1" values="MAXGROUPELEMENTCOUNT">
   </PIN>
   </NODE>
   <NODE systemname="FormatValue (String)" nodename="FormatValue (String)" componentmode="Hidden" id="55">
   <BOUNDS type="Node" left="6450" top="9750" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Input" visible="1" slicecount="1" values="2">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="55" srcpinname="Output" dstnodeid="56" dstpinname="Input 2">
   </LINK>
   <NODE systemname="AvoidNIL (Spreads)" filename="%VVVV%\lib\nodes\modules\Spreads\AvoidNIL (Spreads).v4p" nodename="AvoidNIL (Spreads)" componentmode="Hidden" id="54">
   <BOUNDS type="Node" left="6435" top="9360" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Input" visible="1" slicecount="1" values="0">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="54" srcpinname="Output" dstnodeid="55" dstpinname="Input">
   </LINK>
   <LINK srcnodeid="57" srcpinname="Y Output Value" dstnodeid="54" dstpinname="Input" linkstyle="Bezier" hiddenwhenlocked="1">
   <LINKPOINT x="5010" y="6543">
   </LINKPOINT>
   <LINKPOINT x="6450" y="6043">
   </LINKPOINT>
   </LINK>
   <NODE systemname="Multiply (Value)" nodename="Multiply (Value)" componentmode="Hidden" id="58">
   <BOUNDS type="Node" left="4980" top="2610" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Input 1" visible="1" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Input 2" visible="1" slicecount="1" values="2">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="58" srcpinname="Output" dstnodeid="57" dstpinname="Y Input Value">
   </LINK>
   <NODE systemname="Group (DX11.Layer)" filename="%VVVV%\packs\dx11\nodes\plugins\VVVV.DX11.Nodes.dll" nodename="Group (DX11.Layer)" componentmode="Hidden" id="60">
   <BOUNDS type="Node" left="6570" top="13185" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Layer 2" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Layer 1" visible="1">
   </PIN>
   <PIN pinname="Layer Out" visible="1">
   </PIN>
   <PIN pinname="Enabled" slicecount="1" visible="1" values="1">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (String)" componentmode="InABox" id="66" systemname="IOBox (String)">
   <BOUNDS type="Box" left="3375" top="11040" width="975" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="3375" top="11040" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Input String" slicecount="1" visible="1" values="..\..\fxh\">
   </PIN>
   <PIN pinname="Default" slicecount="1" values="||">
   </PIN>
   <PIN pinname="File Mask" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Maximum Characters" slicecount="1" values="-1">
   </PIN>
   <PIN pinname="String Type" slicecount="1" values="Filename">
   </PIN>
   <PIN pinname="Output String" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="Dispatcher (DX11.Drawer)" filename="%VVVV%\packs\dx11\nodes\plugins\VVVV.DX11.Nodes.dll" nodename="Dispatcher (DX11.Drawer)" componentmode="Hidden" id="65">
   <BOUNDS type="Node" left="2145" top="10605" width="1080" height="270">
   </BOUNDS>
   <PIN pinname="Thread X" visible="1" slicecount="1" values="55000">
   </PIN>
   <PIN pinname="Thread Z" visible="1" slicecount="1" values="64">
   </PIN>
   <PIN pinname="Thread Y" visible="1">
   </PIN>
   <BOUNDS type="Box" left="2145" top="10605">
   </BOUNDS>
   <PIN pinname="Geometry Out" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="IOBox (Value Advanced)" nodename="IOBox (Value Advanced)" componentmode="InABox" id="64">
   <BOUNDS type="Node" left="3660" top="9480" width="100" height="100">
   </BOUNDS>
   <BOUNDS type="Box" left="3660" top="9480" width="375" height="240">
   </BOUNDS>
   <PIN pinname="Value Type" slicecount="1" values="Integer">
   </PIN>
   <PIN pinname="Y Input Value" slicecount="1" values="64">
   </PIN>
   <PIN pinname="Y Output Value" visible="1">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|Group Size|">
   </PIN>
   <PIN pinname="Pin Visibility" slicecount="1" values="OnlyInspector">
   </PIN>
   </NODE>
   <NODE systemname="GetThreadSize (Value)" filename="%VVVV%\packs\dx11.particles\nodes\plugins\DX11.Extensions\x64\DX11.Extensions.dll" nodename="GetThreadSize (Value)" componentmode="Hidden" id="63">
   <BOUNDS type="Node" left="2145" top="10020" width="1560" height="270">
   </BOUNDS>
   <PIN pinname="Element Count" visible="1" slicecount="1" values="1100">
   </PIN>
   <PIN pinname="Group Size" visible="1" slicecount="2" values="64,1">
   </PIN>
   <PIN pinname="ThreadX" visible="1">
   </PIN>
   <PIN pinname="ThreadY" visible="1">
   </PIN>
   <PIN pinname="ThreadZ" visible="1">
   </PIN>
   <BOUNDS type="Box" left="2145" top="10020">
   </BOUNDS>
   <PIN pinname="String" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="64" srcpinname="Y Output Value" dstnodeid="63" dstpinname="Group Size">
   </LINK>
   <LINK srcnodeid="63" srcpinname="ThreadX" dstnodeid="65" dstpinname="Thread X">
   </LINK>
   <LINK srcnodeid="63" srcpinname="ThreadZ" dstnodeid="65" dstpinname="Thread Z">
   </LINK>
   <LINK srcnodeid="63" srcpinname="ThreadY" dstnodeid="65" dstpinname="Thread Y">
   </LINK>
   <NODE systemname="Shader (DX11.Effect String)" filename="%VVVV%\packs\dx11.particles\nodes\plugins\DX11.Extensions\x64\DX11.Extensions.dll" nodename="Shader (DX11.Effect String)" componentmode="Hidden" id="62">
   <BOUNDS type="Node" left="885" top="11580" width="5025" height="270">
   </BOUNDS>
   <BOUNDS type="Box" left="885" top="11580">
   </BOUNDS>
   <PIN pinname="ShaderCode" visible="1" slicecount="1" values="|#include &quot;../fxh/Defines.fxh&quot;&cr;&lf;&cr;&lf;struct Particle {&cr;&lf;&tab;#if defined(COMPOSITESTRUCT)&cr;&lf;  &tab;&tab;COMPOSITESTRUCT&cr;&lf; &tab;#else&cr;&lf;&tab;&tab;int oneVariableNeeded;&cr;&lf;  &tab;&tab;float3 position;&cr;&lf;&tab;#endif&cr;&lf;};&cr;&lf;&cr;&lf;RWStructuredBuffer&lt;Particle&gt; ParticleBuffer : PARTICLEBUFFER;&cr;&lf;&cr;&lf;RWStructuredBuffer&lt;uint&gt; AliveIndexBuffer : ALIVEINDEXBUFFER;&cr;&lf;RWStructuredBuffer&lt;uint&gt; AliveCounterBuffer : ALIVECOUNTERBUFFER;&cr;&lf;&cr;&lf;RWStructuredBuffer&lt;uint&gt; SelectionCounterBuffer : SELECTIONCOUNTERBUFFER;&cr;&lf;RWStructuredBuffer&lt;uint&gt; SelectionIndexBuffer : SELECTIONINDEXBUFFER;&cr;&lf;&cr;&lf;RWStructuredBuffer&lt;bool&gt; FlagBuffer : FLAGBUFFER;&cr;&lf;&cr;&lf;RWStructuredBuffer&lt;GroupLink&gt; GroupLinkBuffer : GROUPLINKBUFFER_group1;&cr;&lf;RWStructuredBuffer&lt;uint&gt; GroupCounterBuffer : GROUPCOUNTERBUFFER_group1;&cr;&lf;&cr;&lf;cbuffer name : register(b0){&cr;&lf;   float4x4 tFilter681 : TFILTER681;&cr;&lf;float4x4 tFilter682 : TFILTER682;&cr;&lf;float4x4 tFilter683 : TFILTER683;&cr;&lf;float4x4 tFilter684 : TFILTER684;&cr;&lf;float4x4 tFilter685 : TFILTER685;&cr;&lf;float4x4 tFilter686 : TFILTER686;&cr;&lf;float4x4 tFilter687 : TFILTER687;&cr;&lf;float4x4 tFilter688 : TFILTER688;&cr;&lf;float4x4 tFilter689 : TFILTER689;&cr;&lf;float4x4 tFilter690 : TFILTER690;&cr;&lf;float4x4 tFilter691 : TFILTER691;&cr;&lf;float4x4 tFilter692 : TFILTER692;&cr;&lf;float4x4 tFilter693 : TFILTER693;&cr;&lf;float4x4 tFilter694 : TFILTER694;&cr;&lf;float4x4 tFilter695 : TFILTER695;&cr;&lf;float4x4 tFilter696 : TFILTER696;&cr;&lf;float4x4 tFilter697 : TFILTER697;&cr;&lf;float4x4 tFilter698 : TFILTER698;&cr;&lf;float4x4 tFilter699 : TFILTER699;&cr;&lf;float4x4 tFilter700 : TFILTER700;&cr;&lf;float4x4 tFilter701 : TFILTER701;&cr;&lf;float4x4 tFilter702 : TFILTER702;&cr;&lf;float4x4 tFilter703 : TFILTER703;&cr;&lf;float4x4 tFilter704 : TFILTER704;&cr;&lf;float4x4 tFilter705 : TFILTER705;&cr;&lf;float4x4 tFilter706 : TFILTER706;&cr;&lf;float4x4 tFilter707 : TFILTER707;&cr;&lf;float4x4 tFilter708 : TFILTER708;&cr;&lf;float4x4 tFilter709 : TFILTER709;&cr;&lf;float4x4 tFilter710 : TFILTER710;&cr;&lf;float4x4 tFilter711 : TFILTER711;&cr;&lf;float4x4 tFilter712 : TFILTER712;&cr;&lf;float4x4 tFilter713 : TFILTER713;&cr;&lf;float4x4 tFilter714 : TFILTER714;&cr;&lf;float4x4 tFilter715 : TFILTER715;&cr;&lf;float4x4 tFilter716 : TFILTER716;&cr;&lf;float4x4 tFilter717 : TFILTER717;&cr;&lf;float4x4 tFilter718 : TFILTER718;&cr;&lf;float4x4 tFilter719 : TFILTER719;&cr;&lf;float4x4 tFilter720 : TFILTER720;&cr;&lf;float4x4 tFilter721 : TFILTER721;&cr;&lf;float4x4 tFilter722 : TFILTER722;&cr;&lf;float4x4 tFilter723 : TFILTER723;&cr;&lf;float4x4 tFilter724 : TFILTER724;&cr;&lf;float4x4 tFilter725 : TFILTER725;&cr;&lf;float4x4 tFilter726 : TFILTER726;&cr;&lf;float4x4 tFilter727 : TFILTER727;&cr;&lf;float4x4 tFilter728 : TFILTER728;&cr;&lf;float4x4 tFilter729 : TFILTER729;&cr;&lf;float4x4 tFilter730 : TFILTER730;&cr;&lf;};&cr;&lf;&cr;&lf;#include &quot;../fxh/Functions.fxh&quot;&cr;&lf;&cr;&lf;void LocalityInsideTransform( uint slotIndex,uint groupIndex, float4x4 tFilter)&cr;&lf;{&cr;&lf;&tab;float3 pointCoord = mul(float4(ParticleBuffer[slotIndex].position,1), tFilter).xyz;&cr;&lf;&tab;if( !(&tab;pointCoord.x &lt; -0.5 |||| pointCoord.x &gt; 0.5 ||||&cr;&lf;&tab;&tab;pointCoord.y &lt; -0.5 |||| pointCoord.y &gt; 0.5 ||||&cr;&lf;&tab;&tab;pointCoord.z &lt; -0.5 |||| pointCoord.z &gt; 0.5))&cr;&lf;&tab;{&cr;&lf;&tab;&tab;uint groupLinkIndex = GroupLinkBuffer.IncrementCounter();&cr;&lf;&tab;&tab;&cr;&lf;&tab;&tab;GroupLink link;&cr;&lf;&tab;&tab;link.groupId = groupIndex;&cr;&lf;&tab;&tab;link.particleId = slotIndex;&cr;&lf;&tab;&tab;&cr;&lf;&tab;&tab;GroupLinkBuffer[groupLinkIndex] = link;&cr;&lf;&tab;&tab;&cr;&lf;&tab;&tab;uint oldval;&cr;&lf;&tab;&tab;InterlockedAdd(GroupCounterBuffer[groupIndex],1,oldval);&cr;&lf;&tab;}&cr;&lf;&cr;&lf;}&cr;&lf;void LocalityOutsideTransform( uint slotIndex, uint groupIndex, float4x4 tFilter)&cr;&lf;{&cr;&lf;&tab;float3 pointCoord = mul(float4(ParticleBuffer[slotIndex].position,1), tFilter).xyz;&cr;&lf;&tab;if( (&tab;pointCoord.x &lt; -0.5 |||| pointCoord.x &gt; 0.5 ||||&cr;&lf;&tab;&tab;pointCoord.y &lt; -0.5 |||| pointCoord.y &gt; 0.5 ||||&cr;&lf;&tab;&tab;pointCoord.z &lt; -0.5 |||| pointCoord.z &gt; 0.5))&cr;&lf;&tab;{&cr;&lf;&tab;&tab;uint groupLinkIndex = GroupLinkBuffer.IncrementCounter();&cr;&lf;&tab;&tab;&cr;&lf;&tab;&tab;GroupLink link;&cr;&lf;&tab;&tab;link.groupId = groupIndex;&cr;&lf;&tab;&tab;link.particleId = slotIndex;&cr;&lf;&tab;&tab;&cr;&lf;&tab;&tab;GroupLinkBuffer[groupLinkIndex] = link;&cr;&lf;&tab;&tab;&cr;&lf;&tab;&tab;uint oldval;&cr;&lf;&tab;&tab;InterlockedAdd(GroupCounterBuffer[groupIndex],1,oldval);&cr;&lf;&tab;}&cr;&lf;&cr;&lf;}&cr;&lf;&cr;&lf;struct csin&cr;&lf;{&cr;&lf;&tab;uint3 DTID : SV_DispatchThreadID;&cr;&lf;&tab;uint3 GTID : SV_GroupThreadID;&cr;&lf;&tab;uint3 GID : SV_GroupID;&cr;&lf;};&cr;&lf;&cr;&lf;[numthreads(XTHREADS, YTHREADS, ZTHREADS)]&cr;&lf;void CS_ClearGroup(csin input)&cr;&lf;{&cr;&lf;&tab;if (input.DTID.x &gt; MAXGROUPELEMENTCOUNT) return;&cr;&lf;&tab;GroupLink link = { -1, -1 };&cr;&lf;&tab;GroupLinkBuffer[input.DTID.x] = link; // resets all links&cr;&lf;&tab;&cr;&lf;&tab;GroupCounterBuffer[input.DTID.x] = 0;&cr;&lf;}&cr;&lf;&cr;&lf;[numthreads(XTHREADS, YTHREADS, ZTHREADS)]&cr;&lf;void CS_SetGroup(csin input)&cr;&lf;{&cr;&lf;&tab;&cr;&lf;&tab;uint slotIndex = getSlotIndex( input.DTID.x );&cr;&lf;&tab;if (slotIndex == -1 ) return;&cr;&lf;&tab;&cr;&lf;&tab;uint groupIndex = 0;&cr;&lf;&tab;&cr;&lf;&tab;groupIndex= 0 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter681);&cr;&lf;groupIndex= 1 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter682);&cr;&lf;groupIndex= 2 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter683);&cr;&lf;groupIndex= 3 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter684);&cr;&lf;groupIndex= 4 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter685);&cr;&lf;groupIndex= 5 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter686);&cr;&lf;groupIndex= 6 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter687);&cr;&lf;groupIndex= 7 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter688);&cr;&lf;groupIndex= 8 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter689);&cr;&lf;groupIndex= 9 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter690);&cr;&lf;groupIndex= 10 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter691);&cr;&lf;groupIndex= 11 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter692);&cr;&lf;groupIndex= 12 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter693);&cr;&lf;groupIndex= 13 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter694);&cr;&lf;groupIndex= 14 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter695);&cr;&lf;groupIndex= 15 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter696);&cr;&lf;groupIndex= 16 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter697);&cr;&lf;groupIndex= 17 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter698);&cr;&lf;groupIndex= 18 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter699);&cr;&lf;groupIndex= 19 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter700);&cr;&lf;groupIndex= 20 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter701);&cr;&lf;groupIndex= 21 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter702);&cr;&lf;groupIndex= 22 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter703);&cr;&lf;groupIndex= 23 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter704);&cr;&lf;groupIndex= 24 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter705);&cr;&lf;groupIndex= 25 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter706);&cr;&lf;groupIndex= 26 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter707);&cr;&lf;groupIndex= 27 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter708);&cr;&lf;groupIndex= 28 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter709);&cr;&lf;groupIndex= 29 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter710);&cr;&lf;groupIndex= 30 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter711);&cr;&lf;groupIndex= 31 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter712);&cr;&lf;groupIndex= 32 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter713);&cr;&lf;groupIndex= 33 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter714);&cr;&lf;groupIndex= 34 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter715);&cr;&lf;groupIndex= 35 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter716);&cr;&lf;groupIndex= 36 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter717);&cr;&lf;groupIndex= 37 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter718);&cr;&lf;groupIndex= 38 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter719);&cr;&lf;groupIndex= 39 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter720);&cr;&lf;groupIndex= 40 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter721);&cr;&lf;groupIndex= 41 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter722);&cr;&lf;groupIndex= 42 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter723);&cr;&lf;groupIndex= 43 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter724);&cr;&lf;groupIndex= 44 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter725);&cr;&lf;groupIndex= 45 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter726);&cr;&lf;groupIndex= 46 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter727);&cr;&lf;groupIndex= 47 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter728);&cr;&lf;groupIndex= 48 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter729);&cr;&lf;groupIndex= 49 ;&cr;&lf;LocalityInsideTransform(slotIndex,groupIndex,tFilter730);&cr;&lf;&tab;&cr;&lf;}&cr;&lf;&cr;&lf;technique11 ClearGroup { pass P0{SetComputeShader( CompileShader( cs_5_0, CS_ClearGroup() ) );} }&cr;&lf;technique11 SetGroup { pass P0{SetComputeShader( CompileShader( cs_5_0, CS_SetGroup() ) );} }|">
   </PIN>
   <PIN pinname="Technique" visible="1">
   </PIN>
   <PIN pinname="Defines" visible="1" pintype="Input" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Layer" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="66" srcpinname="Output String" dstnodeid="62" dstpinname="IncludePath">
   </LINK>
   <LINK srcnodeid="65" srcpinname="Geometry Out" dstnodeid="62" dstpinname="Geometry">
   </LINK>
   <NODE nodename="IOBox (Enumerations)" componentmode="InABox" id="61" systemname="IOBox (Enumerations)">
   <BOUNDS type="Box" left="4590" top="11040" width="1140" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="4590" top="11040" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Input Enum" slicecount="1" visible="1" values="ClearGroup">
   </PIN>
   </NODE>
   <LINK srcnodeid="61" srcpinname="Output Enum" dstnodeid="62" dstpinname="Technique">
   </LINK>
   <LINK srcnodeid="57" srcpinname="Y Output Value" dstnodeid="63" dstpinname="Element Count" linkstyle="Bezier" hiddenwhenlocked="1">
   <LINKPOINT x="4980" y="6865">
   </LINKPOINT>
   <LINKPOINT x="2175" y="6365">
   </LINKPOINT>
   </LINK>
   <NODE systemname="Cons (String)" filename="%VVVV%\lib\nodes\plugins\VVVV.Nodes.dll" nodename="Cons (String)" componentmode="Hidden" id="67">
   <BOUNDS type="Node" left="5835" top="11040" width="495" height="270">
   </BOUNDS>
   <PIN pinname="Input 1" visible="1" slicecount="3" values="|COMPOSITESTRUCT=float3 velocity; float lifespan; float3 position; float age; float3 force;|,COMPOSITESTRUCTAVAILABLE,MAXPARTICLECOUNT=14">
   </PIN>
   <PIN pinname="Input 2" visible="1" slicecount="2" values="|COMPOSITESTRUCT=float3 position; float lifespan; float3 velocity; float age; float3 force;|,COMPOSITESTRUCTAVAILABLE=1">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   <BOUNDS type="Box" left="5835" top="11040">
   </BOUNDS>
   <PIN pinname="Input Count" slicecount="1" values="3">
   </PIN>
   <PIN pinname="Input 3" visible="1" slicecount="1" values="||">
   </PIN>
   </NODE>
   <LINK srcnodeid="63" srcpinname="String" dstnodeid="67" dstpinname="Input 1" linkstyle="VHV">
   <LINKPOINT x="3705" y="10650">
   </LINKPOINT>
   <LINKPOINT x="5835" y="10650">
   </LINKPOINT>
   </LINK>
   <LINK srcnodeid="1" srcpinname="ParticleSystem Defines" dstnodeid="67" dstpinname="Input 2" linkstyle="Bezier" hiddenwhenlocked="1">
   <LINKPOINT x="11340" y="6768">
   </LINKPOINT>
   <LINKPOINT x="6090" y="6268">
   </LINKPOINT>
   </LINK>
   <LINK srcnodeid="56" srcpinname="Output" dstnodeid="67" dstpinname="Input 3">
   </LINK>
   <LINK srcnodeid="67" srcpinname="Output" dstnodeid="62" dstpinname="Defines">
   </LINK>
   <LINK srcnodeid="62" srcpinname="Layer" dstnodeid="60" dstpinname="Layer 1" linkstyle="VHV">
   <LINKPOINT x="945" y="12503">
   </LINKPOINT>
   <LINKPOINT x="6750" y="12503">
   </LINKPOINT>
   </LINK>
   <LINK srcnodeid="34" srcpinname="Layer Out" dstnodeid="60" dstpinname="Layer 2">
   </LINK>
   <LINK srcnodeid="60" srcpinname="Layer Out" dstnodeid="32" dstpinname="Input Node">
   </LINK>
   <NODE nodename="IOBox (Node)" componentmode="InABox" id="78" systemname="IOBox (Node)">
   <BOUNDS type="Box" left="1845" top="585" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="1845" top="585" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Input Node" slicecount="1" visible="1" values="||">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="Grouping">
   </PIN>
   </NODE>
   <NODE systemname="Zip (String)" filename="%VVVV%\lib\nodes\plugins\VVVV.Nodes.dll" nodename="Zip (String)" componentmode="Hidden" id="80">
   <BOUNDS type="Node" left="1710" top="4080" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Input 1" visible="1" slicecount="2" values="|LocalityOutsideTransform(slotIndex,groupIndex,tFilter681);|,|LocalityOutsideTransform(slotIndex,groupIndex,tFilter682);|">
   </PIN>
   <PIN pinname="Input 2" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="Count (String)" nodename="Count (String)" componentmode="Hidden" id="81">
   <BOUNDS type="Node" left="975" top="1725" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Input" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Count" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="I (Spreads)" nodename="I (Spreads)" componentmode="Hidden" id="82">
   <BOUNDS type="Node" left="795" top="2520" width="100" height="100">
   </BOUNDS>
   <PIN pinname=".. To [" visible="1">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="81" srcpinname="Count" dstnodeid="82" dstpinname=".. To [">
   </LINK>
   <NODE systemname="FormatValue (String)" nodename="FormatValue (String)" componentmode="Hidden" id="83">
   <BOUNDS type="Node" left="1875" top="3060" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Input" visible="1">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="82" srcpinname="Output" dstnodeid="83" dstpinname="Input" linkstyle="VHV">
   <LINKPOINT x="855" y="2910">
   </LINKPOINT>
   <LINKPOINT x="1875" y="2910">
   </LINKPOINT>
   </LINK>
   <NODE systemname="Add (String)" nodename="Add (String)" componentmode="Hidden" id="84">
   <BOUNDS type="Node" left="1710" top="3645" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Input Count" slicecount="1" values="3">
   </PIN>
   <PIN pinname="Input 1" slicecount="1" values="groupIndex=">
   </PIN>
   <PIN pinname="Input 2" visible="1">
   </PIN>
   <PIN pinname="Input 3" slicecount="1" values=";">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   <PIN pinname="Intersperse" slicecount="1" values="Space">
   </PIN>
   </NODE>
   <LINK srcnodeid="83" srcpinname="Output" dstnodeid="84" dstpinname="Input 2">
   </LINK>
   <LINK srcnodeid="84" srcpinname="Output" dstnodeid="80" dstpinname="Input 1">
   </LINK>
   <LINK srcnodeid="80" srcpinname="Output" dstnodeid="41" dstpinname="Input 5" linkstyle="Bezier" hiddenwhenlocked="1">
   <LINKPOINT x="1770" y="5783">
   </LINKPOINT>
   <LINKPOINT x="11415" y="5783">
   </LINKPOINT>
   </LINK>
   <NODE systemname="Zip (Value)" filename="%VVVV%\lib\nodes\plugins\VVVV.Nodes.dll" nodename="Zip (Value)" componentmode="Hidden" id="85">
   <BOUNDS type="Node" left="14010" top="4065" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Input 1" visible="1">
   </PIN>
   <PIN pinname="Input 2" visible="1">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="57" srcpinname="Y Output Value" dstnodeid="85" dstpinname="Input 1" linkstyle="Bezier" hiddenwhenlocked="1">
   <LINKPOINT x="5040" y="3630">
   </LINKPOINT>
   <LINKPOINT x="14010" y="3630">
   </LINKPOINT>
   </LINK>
   <LINK srcnodeid="81" srcpinname="Count" dstnodeid="85" dstpinname="Input 2" linkstyle="Bezier" hiddenwhenlocked="1">
   <LINKPOINT x="1035" y="3015">
   </LINKPOINT>
   <LINKPOINT x="14295" y="3015">
   </LINKPOINT>
   </LINK>
   <LINK srcnodeid="85" srcpinname="Output" dstnodeid="50" dstpinname="Y Input Value">
   </LINK>
   <LINK srcnodeid="1" srcpinname="ParticleSystem ElementCount" dstnodeid="58" dstpinname="Input 2" linkstyle="Bezier" hiddenwhenlocked="1">
   <LINKPOINT x="11535" y="2288">
   </LINKPOINT>
   <LINKPOINT x="5310" y="2288">
   </LINKPOINT>
   </LINK>
   <LINK srcnodeid="81" srcpinname="Count" dstnodeid="58" dstpinname="Input 1" linkstyle="Bezier" hiddenwhenlocked="1">
   <LINKPOINT x="1035" y="2288">
   </LINKPOINT>
   <LINKPOINT x="4980" y="2288">
   </LINKPOINT>
   </LINK>
   <NODE nodename="IOBox (String)" componentmode="InABox" id="86" systemname="IOBox (String)">
   <BOUNDS type="Node" left="16890" top="5415" width="2565" height="270">
   </BOUNDS>
   <BOUNDS type="Box" left="16890" top="5415" width="2565" height="270">
   </BOUNDS>
   <PIN pinname="Input String" visible="0" slicecount="1" values="|&lt;&lt; register buffer for this groups|">
   </PIN>
   <PIN pinname="Output String" visible="0">
   </PIN>
   <PIN pinname="Show Grid" slicecount="1" values="0">
   </PIN>
   <PIN pinname="String Type" slicecount="1" values="MultiLine">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (String)" componentmode="InABox" id="87" systemname="IOBox (String)">
   <BOUNDS type="Node" left="6645" top="2985" width="3240" height="270">
   </BOUNDS>
   <BOUNDS type="Box" left="6645" top="2985" width="3240" height="270">
   </BOUNDS>
   <PIN pinname="Input String" visible="0" slicecount="1" values="|&lt;&lt; number of particles * number of groups|">
   </PIN>
   <PIN pinname="Output String" visible="0">
   </PIN>
   <PIN pinname="Show Grid" slicecount="1" values="0">
   </PIN>
   <PIN pinname="String Type" slicecount="1" values="MultiLine">
   </PIN>
   </NODE>
   <NODE systemname="Split (DX11.Particles.Groups)" filename="%VVVV%\packs\dx11.particles\nodes\plugins\DX11.Particles.Core\x64\DX11.Particles.Core.dll" nodename="Split (DX11.Particles.Groups)" componentmode="Hidden" id="77">
   <BOUNDS type="Node" left="1830" top="1140" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Input" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Variable List" visible="1">
   </PIN>
   <PIN pinname="Constant Buffer Entry" visible="1">
   </PIN>
   <PIN pinname="Custom Semantics" visible="1">
   </PIN>
   <PIN pinname="Function Definition" visible="1">
   </PIN>
   <PIN pinname="Function Call" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="78" srcpinname="Output Node" dstnodeid="77" dstpinname="Input">
   </LINK>
   <LINK srcnodeid="77" srcpinname="Variable List" dstnodeid="2" dstpinname="Structure" linkstyle="Bezier">
   <LINKPOINT x="1890" y="1553">
   </LINKPOINT>
   <LINKPOINT x="10155" y="1553">
   </LINKPOINT>
   </LINK>
   <LINK srcnodeid="77" srcpinname="Variable List" dstnodeid="41" dstpinname="Input 1" linkstyle="Bezier" hiddenwhenlocked="1">
   <LINKPOINT x="1890" y="4305">
   </LINKPOINT>
   <LINKPOINT x="9675" y="4305">
   </LINKPOINT>
   </LINK>
   <LINK srcnodeid="77" srcpinname="Constant Buffer Entry" dstnodeid="41" dstpinname="Input 2" linkstyle="Bezier" hiddenwhenlocked="1">
   <LINKPOINT x="2415" y="4313">
   </LINKPOINT>
   <LINKPOINT x="10110" y="4313">
   </LINKPOINT>
   </LINK>
   <LINK srcnodeid="77" srcpinname="Function Definition" dstnodeid="41" dstpinname="Input 4" linkstyle="Bezier" hiddenwhenlocked="1">
   <LINKPOINT x="2235" y="4305">
   </LINKPOINT>
   <LINKPOINT x="10965" y="4305">
   </LINKPOINT>
   </LINK>
   <LINK srcnodeid="77" srcpinname="Function Call" dstnodeid="81" dstpinname="Input" linkstyle="Bezier">
   <LINKPOINT x="1995" y="1553">
   </LINKPOINT>
   <LINKPOINT x="1035" y="1553">
   </LINKPOINT>
   </LINK>
   <LINK srcnodeid="77" srcpinname="Function Call" dstnodeid="80" dstpinname="Input 2">
   </LINK>
   <LINK srcnodeid="10" srcpinname="Content" dstnodeid="8" dstpinname="Input">
   </LINK>
   <LINK srcnodeid="8" srcpinname="Output" dstnodeid="62" dstpinname="ShaderCode" linkstyle="Bezier">
   <LINKPOINT x="5790" y="9810">
   </LINKPOINT>
   <LINKPOINT x="2805" y="9810">
   </LINKPOINT>
   </LINK>
   <LINK srcnodeid="8" srcpinname="Output" dstnodeid="15" dstpinname="ShaderCode" linkstyle="Bezier">
   <LINKPOINT x="5865" y="9810">
   </LINKPOINT>
   <LINKPOINT x="8775" y="9810">
   </LINKPOINT>
   </LINK>
   <LINK srcnodeid="77" srcpinname="Custom Semantics" dstnodeid="34" dstpinname="Custom Semantics" linkstyle="Bezier" hiddenwhenlocked="1">
   <LINKPOINT x="2565" y="7088">
   </LINKPOINT>
   <LINKPOINT x="7185" y="7088">
   </LINKPOINT>
   </LINK>
   </PATCH>